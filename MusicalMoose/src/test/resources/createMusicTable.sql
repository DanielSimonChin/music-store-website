USE MUSICSTORAGE;
SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE IF EXISTS SURVEYROW;
DROP TABLE IF EXISTS SURVEY;
DROP TABLE IF EXISTS NEWS;
DROP TABLE IF EXISTS ADDRESSES;
DROP TABLE IF EXISTS BANNERAD;
DROP TABLE IF EXISTS SALEBRALBUM;
DROP TABLE IF EXISTS SALEBRTRACK;
DROP TABLE IF EXISTS CREDITCARDINFO;
DROP TABLE IF EXISTS REVIEW;
DROP TABLE IF EXISTS INVOICE;
DROP TABLE IF EXISTS CLIENT;
DROP TABLE IF EXISTS ALBUM;
DROP TABLE IF EXISTS MUSIC_TRACK;

SET FOREIGN_KEY_CHECKS = 1;
CREATE TABLE ALBUM (
ALBUMID INT NOT NULL auto_increment,
ALBUMTITLE VARCHAR(255),
RELEASEDATE TIMESTAMP,
ARTIST VARCHAR(255),
RECORDLABEL VARCHAR(255),
NUMBEROFTRACKS INT,
DATEENTERED TIMESTAMP,
ALBUMIMAGEFILENAME VARCHAR(255),
IMAGECONTENT LONGBLOB,
COSTPRICE FLOAT,
LISTPRICE FLOAT,
SALEPRICE FLOAT,
REMOVALSTATUS BIT(1),
REMOVALDATE TIMESTAMP,
PRIMARY KEY (ALBUMID)
);

CREATE TABLE MUSIC_TRACK(
INVENTORYID INT NOT NULL auto_increment ,
ALBUMID INT,
TRACKTITLE VARCHAR(255),
ARTIST VARCHAR(255),
SONGWRITER VARCHAR(255),
PLAYLENGTH FLOAT,
SELECTIONNUMBER INT,
MUSICCATEGORY VARCHAR(255),
ALBUMIMAGEFILENAME VARCHAR(255),
IMAGECONTENT LONGBLOB,
COSTPRICE FLOAT,
LISTPRICE FLOAT,
SALEPRICE FLOAT,
DATEENTERED TIMESTAMP,
PARTOFALBUM BIT(1),
REMOVALSTATUS BIT(1),
REMOVALDATE TIMESTAMP,
CONSTRAINT fkalbumid FOREIGN KEY (ALBUMID) REFERENCES ALBUM(ALBUMID), 
PRIMARY KEY (INVENTORYID)
);

CREATE TABLE CLIENT (
CLIENTID INT NOT NULL auto_increment,
TITLE VARCHAR(255),
LASTNAME VARCHAR(255),
FIRSTNAME VARCHAR(255),
COMPANYNAME VARCHAR(255),
ADDRESS1 VARCHAR(255),
ADDRESS2 VARCHAR(255),
CITY VARCHAR(255),
PROVINCE VARCHAR(255),
COUNTRY VARCHAR(255),
POSTALCODE VARCHAR(255),
HOMETELEPHONE INT,
CELLTELEPHONE INT,
EMAIL VARCHAR(255),
GENREOFLASTSEARCH VARCHAR(255),
PRIMARY KEY (CLIENTID)
);





CREATE TABLE REVIEW (
REVIEWID INT NOT NULL auto_increment,
REVIEWDATE TIMESTAMP,
CLIENTNAME VARCHAR(255),
RATING INT,
REVIEWTEXT MEDIUMTEXT,
APROVALSTATUS BIT(1),
CLIENTID INT,
CONSTRAINT fkclientid FOREIGN KEY (CLIENTID) REFERENCES CLIENT (CLIENTID),
PRIMARY KEY (REVIEWID )
);
CREATE TABLE CREDITCARDINFO(
CREDITCARDID INT NOT NULL auto_increment,
CREDITCARDBRAND  VARCHAR(255),
CREDITCARDNUMBER INT,
EXPIRATIONMONTH SMALLINT,
EXPIRATIONYEAR  SMALLINT,
CLIENTID INT,
CONSTRAINT fkclientid1 FOREIGN KEY (CLIENTID) REFERENCES CLIENT (CLIENTID),
PRIMARY KEY (CREDITCARDID)

);
CREATE TABLE INVOICE(
SALEID INT NOT NULL auto_increment,
SALEDATE TIMESTAMP,
CLIENTID INT ,
TOTALNETVALUE FLOAT,
PST FLOAT,
GST FLOAT,
HST FLOAT,
TOTALGROSSVALUE FLOAT,
CONSTRAINT fkclientid2 FOREIGN KEY (CLIENTID) REFERENCES CLIENT (CLIENTID),
PRIMARY KEY (SALEID)
);
CREATE TABLE SALEBRTRACK(
SALEBRTRACKID INT NOT NULL auto_increment,
SALEID INT,
INVENTORYID INT,
DATEOFSALE TIMESTAMP,
PRICE FLOAT,
CONSTRAINT fksaleid FOREIGN KEY (SALEID) REFERENCES INVOICE (SALEID),
CONSTRAINT fkinventoryid FOREIGN KEY (INVENTORYID) REFERENCES MUSIC_TRACK (INVENTORYID),
PRIMARY KEY (SALEBRTRACKID)
);
CREATE TABLE SALEBRALBUM (
SALEBRALBUMID INT NOT NULL auto_increment,
SALEID INT,
ALBUMID INT,
DATEOFSALE TIMESTAMP,
PRICE FLOAT,
CONSTRAINT fksaleid1 FOREIGN KEY (SALEID) REFERENCES INVOICE (SALEID),
CONSTRAINT fkalbumid1 FOREIGN KEY (ALBUMID) REFERENCES ALBUM (ALBUMID),
PRIMARY KEY (SALEBRALBUMID)
);
CREATE TABLE BANNERAD (
SPONCER VARCHAR(255),
ADDREVENUE FLOAT,
ADIMAGENAME TIMESTAMP,
IMAGE LONGBLOB,
BANNERADDID INT NOT NULL auto_increment,
BANNERTITLE VARCHAR(255),
PRIMARY KEY (BANNERADDID)
);


CREATE TABLE NEWS(
NEWSID INT NOT NULL auto_increment,
NEWTITLE VARCHAR(255),
NEWSTEXT MEDIUMTEXT,
CREATEDDATE TIMESTAMP,
LASTDISPLAYEDDTAE TIMESTAMP,
PRIMARY KEY (NEWSID)

);

CREATE TABLE SURVEY(
SURVEYID INT NOT NULL auto_increment,
SURVEYTITLE VARCHAR(255),
SURVEYTEXT VARCHAR(255),
DATESURVEYRCREATED TIMESTAMP,
DATELASTUSED TIMESTAMP,
SURVERYENDED BIT(1),
PRIMARY KEY (SURVEYID)
);
CREATE TABLE SURVEYROW(
ROWID INT NOT NULL auto_increment,
SURVEYID INT,  
ROWNAME VARCHAR(255),
NUMBEROFVOTES INT,
CONSTRAINT fksurveyid FOREIGN KEY (SURVEYID) REFERENCES SURVEY (SURVEYID),
PRIMARY KEY (ROWID)
);